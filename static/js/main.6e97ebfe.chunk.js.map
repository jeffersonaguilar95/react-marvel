{"version":3,"sources":["hooks/useDebounce.ts","hooks/useFilters.ts","hooks/usePagination.ts","hooks/useWidth.ts","hooks/useWindowSize.ts","components/Home/useStyles.ts","components/Home/Home.tsx","components/Layout/useStyles.ts","components/Layout/Layout.tsx","common/Pagination/Pagination.tsx","common/GridListSkeleton/GridListSkeleton.tsx","common/GridList/useStyles.ts","common/GridList/GridList.tsx","api.ts","components/Characters/useCharacters.ts","components/Characters/Characters.tsx","components/Events/useEvents.ts","components/Events/Events.tsx","components/Comics/useComics.ts","components/Comics/Comics.tsx","components/Creators/useCreators.ts","components/Creators/Creators.tsx","components/Series/useSeries.ts","components/Series/Series.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useFilters","search","events","comics","filters","setFilters","setFilter","filter","usePagination","initialPage","page","setPage","useWidth","theme","useTheme","breakpoints","keys","reverse","reduce","output","key","matches","useMediaQuery","up","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useStyles","makeStyles","root","backgroundImage","Home","debouncedWindowSize","classes","Box","className","display","justifyContent","alignItems","src","alt","createStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","content","flexGrow","minHeight","flexDirection","toolbar","padding","mixins","boxWrapper","SECTIONS","name","path","Icon","HomeIcon","GroupIcon","EventIcon","ReceiptIcon","SupervisedUserCircleIcon","TimelineIcon","Layout","children","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","noWrap","Drawer","paper","direction","ChevronRight","ChevronLeft","Divider","List","map","index","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","Pagination","total","limit","props","isLargeDevice","count","useMemo","Math","ceil","mt","shape","size","siblingCount","GridListSkeleton","cols","rows","totalItems","Array","from","_","Skeleton","animation","style","marginTop","title","borderRadius","backgroundColor","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","down","COLS_BY_WIDTH","xs","sm","md","lg","xl","GridList","resourceQuery","displayKey","currentWidth","gridCols","bgcolor","pb","InputBase","placeholder","input","inputProps","onChange","event","target","isFetching","cellHeight","Fragment","resolvedData","results","item","GridListTile","modified","thumbnail","extension","GridListTileBar","api","axios","baseURL","interceptors","request","use","config","params","restParams","offset","apikey","process","hash","ts","getCharacters","a","get","data","Error","message","Characters","debouncedSearch","charactersQuery","orderBy","nameStartsWith","usePaginatedQuery","getEvents","Events","eventsQuery","getComics","Comics","comicsQuery","titleStartsWith","getCreators","Creators","creatorsQuery","Series","seriesQuery","createMuiTheme","main","grey","secondary","red","responsiveFontSizes","queryCache","QueryCache","defaultConfig","queries","staleTime","Wrapper","p","App","ThemeProvider","basepath","initialIsOpen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6e97ebfe.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  )\n\n  return debouncedValue\n}\n","import { useState } from 'react'\nimport { Filters, SetFilter } from 'interfaces'\n\nconst useFilters = () => {\n  const [filters, setFilters] = useState<Filters>({\n    search: '',\n    events: '',\n    comics: ''\n  })\n\n  const setFilter: SetFilter = (filter, value) => {\n    setFilters((filters) => ({\n      ...filters,\n      [filter]: value\n    }))\n  }\n\n  return {\n    filters,\n    setFilter\n  }\n}\n\nexport default useFilters\n","import { useState } from 'react'\n\nconst usePagination = (initialPage = 1) => {\n  const [page, setPage] = useState(initialPage)\n\n  return {\n    page,\n    setPage\n  }\n}\n\nexport default usePagination\n","import { Theme, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints'\n\ntype BreakpointOrNull = Breakpoint | null\n\n/**\n * Material UI custom Hook to prevent using of HOC \"withWidth()\"\n * See https://material-ui.com/components/use-media-query/#migrating-from-withwidth\n */\nconst useWidth = (): Breakpoint => {\n  const theme: Theme = useTheme()\n  const keys: Breakpoint[] = [...theme.breakpoints.keys].reverse()\n  return (\n    keys.reduce((output: BreakpointOrNull, key: Breakpoint) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key))\n      return !output && matches ? key : output\n    }, null) || 'xs'\n  )\n}\n\nexport default useWidth\n","import { useState, useEffect } from 'react'\n\nexport interface WindowSize {\n  width?: number\n  height?: number\n}\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: undefined,\n    height: undefined\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    const handleResize = () => {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n\nexport default useWindowSize\n","import { makeStyles } from '@material-ui/core/styles'\nimport { WindowSize } from 'hooks/useWindowSize'\n\n// This could be an interface in the future with multiple props\ntype IProps = WindowSize\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n    backgroundImage: ({ width }: IProps) => {\n      if (width) {\n        return `url(\"https://images.unsplash.com/photo-1588497859490-85d1c17db96d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=${width}\")`\n      }\n      return ''\n    }\n  }\n})\n\nexport default useStyles\n","import * as React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport { Box } from '@material-ui/core'\nimport { useDebounce, useWindowSize } from 'hooks'\nimport { WindowSize } from 'hooks/useWindowSize'\nimport useStyles from './useStyles'\n\nconst Home: React.FC<RouteComponentProps> = () => {\n  const windowSize = useWindowSize()\n  const debouncedWindowSize = useDebounce<WindowSize>(windowSize, 2000)\n  const classes = useStyles(debouncedWindowSize)\n\n  return (\n    <Box className={classes.root} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      {!debouncedWindowSize?.width && (\n        <img\n          src=\"https://icon-library.com/images/loading-icon-transparent-background/loading-icon-transparent-background-12.jpg\"\n          alt=\"loading\"\n          width=\"40wh\"\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default Home\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap'\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1\n      }\n    },\n    content: {\n      flexGrow: 1,\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar\n    },\n    boxWrapper: {\n      '& > div:first-child': {\n        height: '100%'\n      }\n    }\n  })\n)\n\nexport default useStyles\n","import * as React from 'react'\nimport clsx from 'clsx'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  CssBaseline,\n  Typography,\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n  SvgIconProps\n} from '@material-ui/core'\nimport {\n  Menu as MenuIcon,\n  ChevronLeft as ChevronLeftIcon,\n  ChevronRight as ChevronRightIcon,\n  Group as GroupIcon,\n  Event as EventIcon,\n  Home as HomeIcon,\n  Receipt as ReceiptIcon,\n  SupervisedUserCircle as SupervisedUserCircleIcon,\n  Timeline as TimelineIcon\n} from '@material-ui/icons'\nimport { Link, RouteComponentProps } from '@reach/router'\nimport useStyles from './useStyles'\n\ntype Section = {\n  name: string\n  path: string\n  Icon: React.ComponentType<SvgIconProps>\n}\n\nconst SECTIONS: Section[] = [\n  {\n    name: 'Home',\n    path: '',\n    Icon: HomeIcon\n  },\n  {\n    name: 'Characters',\n    path: 'characters',\n    Icon: GroupIcon\n  },\n  {\n    name: 'Events',\n    path: 'events',\n    Icon: EventIcon\n  },\n  {\n    name: 'Comics',\n    path: 'comics',\n    Icon: ReceiptIcon\n  },\n  {\n    name: 'Creators',\n    path: 'creators',\n    Icon: SupervisedUserCircleIcon\n  },\n  {\n    name: 'Series',\n    path: 'series',\n    Icon: TimelineIcon\n  }\n]\n\nconst Layout: React.FC<RouteComponentProps> = ({ children }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            React Marvel - Jefferson\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          })\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {SECTIONS.map(({ name, path, Icon }, index) => (\n            <ListItem button key={`${name}-${index}`} component={Link} to={path}>\n              <ListItemIcon>\n                <Icon />\n              </ListItemIcon>\n              <ListItemText primary={name} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Box display=\"flex\" flexDirection=\"column\" flexGrow=\"1\" className={classes.boxWrapper}>\n          {children}\n        </Box>\n      </main>\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useMemo } from 'react'\nimport { Box, useMediaQuery } from '@material-ui/core'\nimport { Pagination as MaterialPagination, PaginationProps } from '@material-ui/lab'\nimport { useTheme } from '@material-ui/core/styles'\n\ntype Props = {\n  total?: number\n  limit?: number\n}\n\nconst Pagination: React.FC<PaginationProps & Props> = ({ total = 0, limit = 0, ...props }) => {\n  const theme = useTheme()\n  const isLargeDevice = useMediaQuery(theme.breakpoints.up('md'))\n\n  const count = useMemo(() => {\n    return Math.ceil(total / limit)\n  }, [total, limit])\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n      <MaterialPagination\n        color=\"secondary\"\n        shape=\"rounded\"\n        size={isLargeDevice ? 'large' : 'small'}\n        siblingCount={isLargeDevice ? 3 : 0}\n        count={count}\n        {...props}\n      />\n    </Box>\n  )\n}\n\nexport default Pagination\n","import * as React from 'react'\nimport { Box, GridList, GridListProps } from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab'\n\ntype Props = {\n  rows?: number\n}\n\nconst GridListSkeleton: React.FC<GridListProps & Props> = ({ cols = 1, rows = 1, ...props }) => {\n  const totalItems = Array.from(new Array(cols * rows))\n  return (\n    <GridList cols={cols} {...props}>\n      {totalItems.map((_: undefined, index: number) => (\n        <Box key={`GridListSkeleton__${index}`} width={1}>\n          <Skeleton variant=\"rect\" height=\"100%\" />\n          <Skeleton variant=\"text\" height=\"35%\" animation=\"wave\" style={{ marginTop: '-63px' }} />\n        </Box>\n      ))}\n    </GridList>\n  )\n}\n\nexport default GridListSkeleton\n","import { createStyles, fade, makeStyles, Theme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: 'block'\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: 'auto',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1)\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.down('sm')]: {\n        width: '0ch',\n        '&:focus': {\n          width: '100%'\n        }\n      },\n      [theme.breakpoints.up('md')]: {\n        width: '30ch',\n        '&:focus': {\n          width: '40ch'\n        }\n      }\n    }\n  })\n)\n\nexport default useStyles\n","import React from 'react'\nimport {\n  Box,\n  GridList as MaterialGridList,\n  GridListTile,\n  GridListTileBar,\n  InputBase,\n  AppBar,\n  Toolbar,\n  Typography\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { RouteComponentProps } from '@reach/router'\nimport { PaginatedQueryResult } from 'react-query'\nimport { useWidth } from 'hooks'\nimport * as Types from 'interfaces'\nimport Pagination from '../Pagination/Pagination'\nimport GridListSkeleton from '../GridListSkeleton/GridListSkeleton'\nimport useStyles from './useStyles'\n\nconst COLS_BY_WIDTH = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 5,\n  xl: 6\n}\n\ninterface Props {\n  title: string\n  page: number\n  setPage: React.ComponentState\n  resourceQuery: PaginatedQueryResult<Types.MarvelResponse>\n  filters: Types.Filters\n  setFilter: Types.SetFilter\n  displayKey: string\n}\n\nconst GridList: React.FC<RouteComponentProps & Props> = ({\n  title,\n  page,\n  setPage,\n  resourceQuery,\n  filters,\n  setFilter,\n  displayKey\n}) => {\n  const classes = useStyles()\n  const currentWidth = useWidth()\n  const gridCols = COLS_BY_WIDTH[currentWidth] || 3\n\n  const handlePaginationChange = (event: React.ChangeEvent<unknown>, page: number) => {\n    setPage(page)\n  }\n\n  const handleSearchChange = (event: React.ChangeEvent<Types.FilterInputElement>) => {\n    const {\n      target: { name, value }\n    } = event\n    setFilter(name, value)\n    setPage(1)\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\" pb={4}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {title}\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              name=\"search\"\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={filters.search}\n              onChange={handleSearchChange}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {resourceQuery.isFetching ? (\n        <GridListSkeleton cols={gridCols} rows={3} cellHeight={210} />\n      ) : (\n        <React.Fragment>\n          <MaterialGridList cellHeight={210} cols={gridCols}>\n            {(resourceQuery.resolvedData?.results as Array<Types.MarvelResource>).map(\n              (item: Types.MarvelResource, index: number) => (\n                <GridListTile key={`${item.modified}-${index}`}>\n                  <img alt={item.thumbnail.path} src={`${item.thumbnail.path}.${item.thumbnail.extension}`} />\n                  <GridListTileBar title={item[displayKey as keyof Types.MarvelResource]} />\n                </GridListTile>\n              )\n            )}\n          </MaterialGridList>\n          <Pagination\n            total={resourceQuery.resolvedData?.total}\n            limit={resourceQuery.resolvedData?.limit}\n            onChange={handlePaginationChange}\n            page={page}\n          />\n        </React.Fragment>\n      )}\n    </Box>\n  )\n}\n\nexport default GridList\n","import axios, { AxiosRequestConfig } from 'axios'\n\nconst LIMIT_COUNT = 18\n\nconst api = axios.create({\n  baseURL: 'https://gateway.marvel.com/v1/public'\n})\n\napi.interceptors.request.use(\n  (config): AxiosRequestConfig => {\n    const {\n      params: { page, ...restParams }\n    } = config\n    return {\n      ...config,\n      params: {\n        ...restParams,\n        offset: (page - 1) * LIMIT_COUNT,\n        limit: LIMIT_COUNT,\n        apikey: process.env.REACT_APP_API_KEY,\n        hash: process.env.REACT_APP_API_HASH,\n        ts: process.env.REACT_APP_API_TS\n      }\n    }\n  }\n)\n\nexport default api\n","import { usePaginatedQuery, PaginatedQueryResult, QueryKey } from 'react-query'\nimport api from 'api'\nimport { QueryParams, CharactersResponse } from 'interfaces'\n\ninterface Params extends QueryParams {\n  events?: string\n  nameStartsWith?: string | null\n}\n\nconst getCharacters = async (_: QueryKey, params?: Params): Promise<CharactersResponse> => {\n  try {\n    const {\n      data: { data }\n    } = await api.get('/characters', {\n      params\n    })\n    return data\n  } catch (e) {\n    throw new Error(e.message)\n  }\n}\n\nexport default function useCharacters(params?: Params): PaginatedQueryResult<CharactersResponse> {\n  return usePaginatedQuery(['characters', params], getCharacters)\n}\n","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport GridList from 'common/GridList/GridList'\nimport { useDebounce, useFilters, usePagination } from 'hooks'\nimport useCharacters from './useCharacters'\n\nconst Characters: React.FC<RouteComponentProps> = () => {\n  const { page, setPage } = usePagination()\n  const { filters, setFilter } = useFilters()\n  const debouncedSearch = useDebounce(filters.search, 750)\n\n  const charactersQuery = useCharacters({\n    orderBy: 'name',\n    page,\n    nameStartsWith: debouncedSearch ? debouncedSearch : null\n  })\n\n  return (\n    <GridList\n      title=\"Characters\"\n      page={page}\n      setPage={setPage}\n      resourceQuery={charactersQuery}\n      setFilter={setFilter}\n      filters={filters}\n      displayKey=\"name\"\n    />\n  )\n}\n\nexport default Characters\n","import { PaginatedQueryResult, QueryKey, usePaginatedQuery } from 'react-query'\nimport api from 'api'\nimport { QueryParams, EventsResponse } from 'interfaces'\n\ninterface Params extends QueryParams {\n  nameStartsWith?: string | null\n}\n\nconst getEvents = async (_: QueryKey, params?: Params): Promise<EventsResponse> => {\n  try {\n    const {\n      data: { data }\n    } = await api.get('/events', {\n      params\n    })\n\n    return data\n  } catch (e) {\n    throw new Error(e.message)\n  }\n}\n\nexport default function useEvents(params?: Params): PaginatedQueryResult<EventsResponse> {\n  return usePaginatedQuery(['events', params], getEvents)\n}\n","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport GridList from 'common/GridList/GridList'\nimport { useDebounce, useFilters, usePagination } from 'hooks'\nimport useEvents from './useEvents'\n\nconst Events: React.FC<RouteComponentProps> = () => {\n  const { page, setPage } = usePagination()\n  const { filters, setFilter } = useFilters()\n  const debouncedSearch = useDebounce(filters.search, 750)\n\n  const eventsQuery = useEvents({\n    orderBy: 'name',\n    page,\n    nameStartsWith: !!debouncedSearch ? debouncedSearch : null\n  })\n\n  return (\n    <GridList\n      title=\"Events\"\n      page={page}\n      setPage={setPage}\n      resourceQuery={eventsQuery}\n      setFilter={setFilter}\n      filters={filters}\n      displayKey=\"title\"\n    />\n  )\n}\n\nexport default Events\n","import { PaginatedQueryResult, QueryKey, usePaginatedQuery } from 'react-query'\nimport api from 'api'\nimport { ComicsResponse, QueryParams } from 'interfaces'\n\ninterface Params extends QueryParams {\n  titleStartsWith?: string | null\n}\n\nconst getComics = async (_: QueryKey, params?: Params): Promise<ComicsResponse> => {\n  try {\n    const {\n      data: { data }\n    } = await api.get('/comics', {\n      params\n    })\n\n    return data\n  } catch (e) {\n    throw new Error(e.message)\n  }\n}\n\nexport default function useComics(params?: Params): PaginatedQueryResult<ComicsResponse> {\n  return usePaginatedQuery(['comics', params], getComics)\n}\n","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport GridList from 'common/GridList/GridList'\nimport { useDebounce, useFilters, usePagination } from 'hooks'\nimport useComics from './useComics'\n\nconst Comics: React.FC<RouteComponentProps> = () => {\n  const { page, setPage } = usePagination()\n  const { filters, setFilter } = useFilters()\n  const debouncedSearch = useDebounce(filters.search, 750)\n\n  const comicsQuery = useComics({\n    orderBy: 'title',\n    page,\n    titleStartsWith: !!debouncedSearch ? debouncedSearch : null\n  })\n\n  return (\n    <GridList\n      title=\"Comics\"\n      page={page}\n      setPage={setPage}\n      resourceQuery={comicsQuery}\n      setFilter={setFilter}\n      filters={filters}\n      displayKey=\"title\"\n    />\n  )\n}\n\nexport default Comics\n","import { PaginatedQueryResult, usePaginatedQuery } from 'react-query'\nimport api from 'api'\nimport { CreatorsResponse, QueryParams } from 'interfaces'\n\ninterface Params extends QueryParams {\n  nameStartsWith?: string | null\n}\n\nconst getCreators = async (key: string, params?: Params): Promise<CreatorsResponse> => {\n  try {\n    const {\n      data: { data }\n    } = await api.get('/creators', {\n      params\n    })\n\n    return data\n  } catch (e) {\n    throw new Error(e.message)\n  }\n}\n\nexport default function useCreators(params?: Params): PaginatedQueryResult<CreatorsResponse> {\n  return usePaginatedQuery(['creators', params], getCreators)\n}\n","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport GridList from 'common/GridList/GridList'\nimport { useDebounce, useFilters, usePagination } from 'hooks'\nimport useCreators from './useCreators'\n\nconst Creators: React.FC<RouteComponentProps> = () => {\n  const { page, setPage } = usePagination()\n  const { filters, setFilter } = useFilters()\n  const debouncedSearch = useDebounce(filters.search, 750)\n\n  const creatorsQuery = useCreators({\n    orderBy: 'firstName',\n    page,\n    nameStartsWith: !!debouncedSearch ? debouncedSearch : null\n  })\n\n  return (\n    <GridList\n      title=\"Creators\"\n      page={page}\n      setPage={setPage}\n      resourceQuery={creatorsQuery}\n      setFilter={setFilter}\n      filters={filters}\n      displayKey=\"fullName\"\n    />\n  )\n}\n\nexport default Creators\n","import { PaginatedQueryResult, usePaginatedQuery } from 'react-query'\nimport api from 'api'\nimport { QueryParams, SeriesResponse } from 'interfaces'\n\ninterface Params extends QueryParams {\n  titleStartsWith?: string | null\n}\n\nconst getCreators = async (key: string, params?: Params): Promise<SeriesResponse> => {\n  try {\n    const {\n      data: { data }\n    } = await api.get('/series', {\n      params\n    })\n\n    return data\n  } catch (e) {\n    throw new Error(e.message)\n  }\n}\n\nexport default function useSeries(params?: Params): PaginatedQueryResult<SeriesResponse> {\n  return usePaginatedQuery(['series', params], getCreators)\n}\n","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport GridList from 'common/GridList/GridList'\nimport { useDebounce, useFilters, usePagination } from 'hooks'\nimport useSeries from './useSeries'\n\nconst Series: React.FC<RouteComponentProps> = () => {\n  const { page, setPage } = usePagination()\n  const { filters, setFilter } = useFilters()\n  const debouncedSearch = useDebounce(filters.search, 750)\n\n  const seriesQuery = useSeries({\n    orderBy: 'title',\n    page,\n    titleStartsWith: !!debouncedSearch ? debouncedSearch : null\n  })\n\n  return (\n    <GridList\n      title=\"Series\"\n      page={page}\n      setPage={setPage}\n      resourceQuery={seriesQuery}\n      setFilter={setFilter}\n      filters={filters}\n      displayKey=\"title\"\n    />\n  )\n}\n\nexport default Series\n","import * as React from 'react'\nimport { Router } from '@reach/router'\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles'\nimport { grey, red } from '@material-ui/core/colors'\nimport { Box } from '@material-ui/core'\nimport { QueryCache, ReactQueryCacheProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport { RouteComponentProps } from '@reach/router'\nimport Home from '../Home/Home'\nimport Layout from '../Layout/Layout'\nimport Characters from '../Characters/Characters'\nimport Events from '../Events/Events'\nimport Comics from '../Comics/Comics'\nimport Creators from '../Creators/Creators'\nimport Series from '../Series/Series'\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900]\n    },\n    secondary: {\n      main: red[700]\n    }\n  }\n})\n\ntheme = responsiveFontSizes(theme)\n\nconst queryCache = new QueryCache({\n  defaultConfig: {\n    queries: {\n      staleTime: 5 * 60 * 1000\n    }\n  }\n})\n\nconst Wrapper: React.FC<RouteComponentProps> = ({ children }) => (\n  <Box p={theme.spacing(0.3)}>{children}</Box>\n)\n\nconst App: React.FC = () => {\n  // console.log('REACT_APP_API_KEY---', process.env.REACT_APP_API_KEY)\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <ThemeProvider theme={theme}>\n        <Router basepath={process.env.PUBLIC_URL}>\n          <Layout path=\"/\">\n            <Home path=\"/\" />\n            <Wrapper path=\"/\">\n              <Characters path=\"characters\" />\n              <Events path=\"events\" />\n              <Comics path=\"comics\" />\n              <Creators path=\"creators\" />\n              <Creators path=\"stories\" />\n              <Series path=\"series\" />\n            </Wrapper>\n          </Layout>\n        </Router>\n      </ThemeProvider>\n      <ReactQueryDevtools initialIsOpen />\n    </ReactQueryCacheProvider>\n  )\n}\n\nexport default App\n","/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL || '/', window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}